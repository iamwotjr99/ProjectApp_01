import { _ as _extends } from './_rollupPluginBabelHelpers-1b8c042f.js';
import React__default, { useState } from 'react';
import { Y as Ye, p as propTypes } from './styled-components.esm-a60371c1.js';

const StyledPopover = Ye.div`
    position: relative;
    display: flex;
    justify-content: center;
`;
const Content = Ye.div`
    background-color: ${({
  theme
}) => theme.background};
    border-radius: 21px;
    box-shadow: 0px 8px 40px rgba(0, 0, 0, 0.12);
    padding: 12px 30px;
    position: absolute;
    bottom: calc(100% + 16px);
    display: ${({
  visible
}) => visible ? 'block' : 'none'};
    ${({
  offset
}) => offset && `transform: translate(${offset.x || 0}, ${offset.y || 0})`};
`;
const Triangle = Ye.div`
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 6px 6px 0 6px;
    border-color: ${({
  theme
}) => theme.background} transparent transparent
    transparent;
    left: calc(50% - 6px);
    bottom: calc(100% + 12px - 5px);
    display: ${({
  visible
}) => visible ? 'block' : 'none'};
    ${({
  offset
}) => offset && `transform: translateY(${offset.y || 0});`}
`;
const Target = Ye.div``;

function Popover({
  children,
  content,
  onHide,
  onVisible,
  offset,
  ...rest
}) {
  const [visible, setVisible] = useState(false);

  const onClick = () => {
    if (visible) {
      setVisible(false);

      if (onHide) {
        onHide();
      }
    } else {
      setVisible(true);

      if (onVisible) {
        onVisible();
      }
    }
  };

  return /*#__PURE__*/React__default.createElement(StyledPopover, _extends({}, rest, {
    onClick: onClick
  }), /*#__PURE__*/React__default.createElement(Content, {
    visible: visible
  }, content), /*#__PURE__*/React__default.createElement(Triangle, {
    visible: visible
  }), /*#__PURE__*/React__default.createElement(Target, null, children));
}

Popover.propTypes = {
  children: propTypes.any,
  content: propTypes.any,
  offset: propTypes.shape({
    x: propTypes.string,
    y: propTypes.string
  }),
  onVisible: propTypes.func,
  onHide: propTypes.func
};

export default Popover;
