import { _ as _extends } from './_rollupPluginBabelHelpers-1b8c042f.js';
import React__default from 'react';
import { _ as _e, Y as Ye, L as Le, p as propTypes } from './styled-components.esm-a60371c1.js';
import { t as theme } from './theme-e593c2e7.js';

const shapeVariants = {
  round: _e`
      width: ${({
    size
  }) => `${size}px`};
      height: ${({
    size
  }) => `${size}px`};
      border-radius: 50%;
      padding: 10px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    `,
  rect: _e`
      padding: 12px 18px;
      border-radius: 6px;
    `
};
const typeVariants = {
  primary: _e`
      background-color: ${({
    theme
  }) => theme.primaryColor};
      color: white;
    `,
  success: _e`
    background-color: ${({
    theme
  }) => theme.successColor};
    color: white;
  `,
  danger: _e`
  background-color: ${({
    theme
  }) => theme.dangerColor};
  color: white;
`
};
const StyledButton = Ye.button`
  border: none;
  outline: none;
  cursor: pointer;
  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);
  ${({
  shape
}) => shapeVariants[shape]}
  ${({
  type
}) => typeVariants[type]}
  ${({
  bgColor
}) => `background-color: ${bgColor}`};
  transform: scale(1);
  transition: 0.4s;
  &:hover {
    transform: scale(1.1);
    box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.12);
  }
`;

function Button({
  children,
  type = 'primary',
  shape = 'rect',
  size = 30,
  color,
  ...rest
}) {
  return /*#__PURE__*/React__default.createElement(Le, {
    theme: theme
  }, /*#__PURE__*/React__default.createElement(StyledButton, _extends({}, rest, {
    type: type,
    shape: shape,
    size: size,
    color: color
  }), children));
}

Button.propTypes = {
  // eslint-disable-next-line react/forbid-prop-types
  children: propTypes.any,
  type: propTypes.oneOf(['primary', 'danger', 'success']),
  shape: propTypes.oneOf(['rect', 'round']),
  color: propTypes.string,
  size: propTypes.number
};

export { Button as B, StyledButton as S };
