import { _ as _extends } from './_rollupPluginBabelHelpers-1b8c042f.js';
import React__default from 'react';
import { _ as _e, Y as Ye, L as Le, p as propTypes } from './styled-components.esm-a60371c1.js';
import { t as theme } from './theme-e593c2e7.js';
import { c as circle } from './mixins-b7fe34bc.js';

const varients = {
  dot: _e`
  padding: 5px;
  position: relative;
  &::after {
      content: "";
      ${({
    theme
  }) => circle(theme.red, '6px')}
       display: ${({
    show
  }) => show ? 'block' : 'none'};
       position: absolute; 
       right: 0;
       top: 0;
  }
  `,
  default: _e`
    ${({
    theme
  }) => circle(theme.red, '26px')}
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0px 18px 40px 0px rgba(0, 0, 0, 0.04),
      0px 6px 12px 0px rgba(0, 0, 0, 0.08);
    ${({
    showZero,
    count
  }) => !showZero && count === 0 && 'visibility: hidden'}
  `
};
const Count = Ye.div`
  font-size: ${({
  theme
}) => theme.normal};
  color: #fff;
`;
const badageWrapper = Ye.div`
  display: inline-block;
  ${({
  varient
}) => varients[varient]}
`;

function Badge({
  children,
  show = false,
  count = 0,
  size = '26px',
  showZero = false,
  ...rest
}) {
  return /*#__PURE__*/React__default.createElement(Le, {
    theme: theme
  }, /*#__PURE__*/React__default.createElement(badageWrapper, _extends({
    varient: children ? 'dot' : 'default',
    show: show,
    count: count,
    size: size,
    showZero: showZero
  }, rest), children || /*#__PURE__*/React__default.createElement(Count, null, count)));
}

Badge.propTypes = {
  children: propTypes.any,
  show: propTypes.bool,
  count: propTypes.number,
  showZero: propTypes.bool,
  size: propTypes.string
};

export default Badge;
