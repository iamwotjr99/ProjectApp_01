import Avatar from './Avatar.js';
export { default as Avatar } from './Avatar.js';
export { default as Badge } from './Badge.js';
export { default as Bubble } from './Bubble.js';
export { B as Button } from './index-d7bca72b.js';
import { _ as _extends } from './_rollupPluginBabelHelpers-1b8c042f.js';
import React__default from 'react';
import { L as Le, p as propTypes } from './styled-components.esm-a60371c1.js';
import { t as theme } from './theme-e593c2e7.js';
import Paragraph from './Paragraph.js';
export { default as Paragraph } from './Paragraph.js';
import { I as Icon } from './index-3c33a3b3.js';
export { I as Icon } from './index-3c33a3b3.js';
import { S as StyledCard, T as Title, a as SubTitle, R as RightLabel, D as Description, U as UnreadBadge } from './index-11bab19a.js';
export { M as MessageList } from './index-11bab19a.js';
export { default as Divider } from './Divider.js';
export { default as Filter } from './Filter.js';
export { default as Heading } from './Heading.js';
export { default as Input } from './Input.js';
export { default as MessageBar } from './MessageBar.js';
export { MenuItem, default as Navbar } from './Navbar.js';
export { default as Option } from './Option.js';
export { default as Popover } from './Popover.js';
export { default as Select } from './Select.js';
export { default as Text } from './Text.js';
export { default as VoiceMessage } from './VoiceMessage.js';
export { default as Profile } from './Profile.js';
export { default as DropDown } from './DropDown.js';
export { default as TitleBar } from './TitleBar.js';
export { default as FilterList } from './FilterList.js';
import ChatApp from './ChatApp.js';
export { default } from './ChatApp.js';
export { default as Conversation } from './Conversation.js';
import './style-07254a25.js';
import './mixins-b7fe34bc.js';
import './style-d40a0211.js';
import './style-fb8054ef.js';
import './style-85ec59ca.js';
import './index-2aec7d0d.js';

function Card({
  children,
  background = '#fff',
  avatarUrl,
  avatarStatus,
  title,
  subtitle,
  rightLabel,
  subLabel: SubLabel,
  description,
  count,
  active,
  iconSvg,
  ...rest
}) {
  return /*#__PURE__*/React__default.createElement(Le, {
    theme: theme
  }, /*#__PURE__*/React__default.createElement(StyledCard, _extends({
    active: active
  }, rest, {
    background: background
  }), /*#__PURE__*/React__default.createElement(Avatar, {
    status: avatarStatus,
    src: avatarUrl
  }), /*#__PURE__*/React__default.createElement(Title, null, title), /*#__PURE__*/React__default.createElement(SubTitle, null, subtitle), SubLabel && /*#__PURE__*/React__default.createElement(SubLabel, {
    style: {
      'grid-area': 'sublabel'
    }
  }), /*#__PURE__*/React__default.createElement(RightLabel, null, rightLabel), /*#__PURE__*/React__default.createElement(Description, {
    iconSvg: iconSvg
  }, iconSvg && /*#__PURE__*/React__default.createElement(Icon, {
    width: 16,
    height: 14,
    icon: iconSvg,
    color: active ? theme.inactiveColorDark : theme.inactiveColor,
    opacity: active ? 0.4 : 1,
    style: {
      justifyContent: 'start'
    }
  }), /*#__PURE__*/React__default.createElement(Paragraph, null, description), /*#__PURE__*/React__default.createElement(UnreadBadge, {
    count: count
  }))));
}

Card.propTypes = {
  children: propTypes.any,
  background: propTypes.string,
  avatarUrl: propTypes.string,
  title: propTypes.string,
  subtitle: propTypes.string,
  rightLabel: propTypes.string,
  subLabel: propTypes.element,
  description: propTypes.string,
  count: propTypes.number,
  avatarStatus: propTypes.any,
  active: propTypes.bool,
  iconSvg: propTypes.oneOfType([propTypes.func, propTypes.object])
};

export { Card };
