import { _ as _extends$2 } from './_rollupPluginBabelHelpers-1b8c042f.js';
import * as React from 'react';
import React__default from 'react';
import { a as animated, u as useSpring } from './index-2aec7d0d.js';
import { Y as Ye, p as propTypes } from './styled-components.esm-a60371c1.js';
import Avatar from './Avatar.js';
import Paragraph from './Paragraph.js';
import Text from './Text.js';
import { a as IconWrapper, I as Icon } from './index-3c33a3b3.js';
import './theme-e593c2e7.js';
import './style-07254a25.js';
import './mixins-b7fe34bc.js';
import './style-d40a0211.js';
import './style-fb8054ef.js';

var _path$1;

function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }

function SvgCall(props) {
  return /*#__PURE__*/React.createElement("svg", _extends$1({
    width: 17,
    height: 16,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path$1 || (_path$1 = /*#__PURE__*/React.createElement("path", {
    d: "M16.293 12.754l-.081-.24c-.193-.561-.826-1.146-1.407-1.3l-2.15-.574c-.583-.155-1.415.053-1.841.47l-.779.761c-2.828-.747-5.046-2.916-5.809-5.68l.778-.761c.427-.417.64-1.23.482-1.8l-.587-2.103C4.741.957 4.142.339 3.57.153L3.324.072c-.574-.187-1.392.002-1.818.42L.342 1.63C.134 1.833 0 2.411 0 2.413a13.29 13.29 0 004.023 9.652c2.608 2.55 6.155 3.965 9.84 3.934.02 0 .628-.127.836-.33l1.164-1.138c.427-.417.62-1.217.429-1.777z",
    fill: "#292F4C"
  })));
}

var _path;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function SvgCamera(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 24,
    height: 14,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M2.626 0h10.95A2.607 2.607 0 0116.2 2.607v8.786c0 1.434-1.181 2.607-2.626 2.607H2.626C1.183 14 0 12.827 0 11.393V2.607C0 1.173 1.182 0 2.626 0zM21.61 1.616c.132-.078.29-.156.447-.182C23.08 1.199 24 1.98 24 2.946v8.056c0 .287-.079.547-.21.782a1.567 1.567 0 01-2.153.573l-4.123-2.346V3.963l4.096-2.347z",
    fill: "#292F4C"
  })));
}

const Title = Ye.div`
  display: grid;
`;
const Actions = Ye.div`
  display: flex;
  justify-content: space-between;
  align-items: center;

  ${IconWrapper} {
    cursor: pointer;
  }
`;
const StyledTitleBar = Ye(animated.div)`
  display: grid;
  grid-template-columns: 62px 1fr 112px;
  padding: 30px;
  max-height: 110px;
  border-bottom: 1px solid #EFECE8;
`;

function TitleBar({
  animeProps = useSpring({
    opacity: 1,
    transform: 'translate3d(0px, 0px, 0px)',
    from: {
      opacity: 0,
      transform: 'translate3d(0px, -50px, 0px)'
    },
    delay: 500
  }),
  style,
  status = 'online',
  onAvatarClick,
  onVideoClicked,
  avatarUrl,
  dropDown: DropDown,
  children,
  ...rest
}) {
  return /*#__PURE__*/React__default.createElement(StyledTitleBar, _extends$2({
    style: { ...style,
      ...animeProps
    }
  }, rest), /*#__PURE__*/React__default.createElement(Avatar, {
    onClick: onAvatarClick,
    status: status,
    src: avatarUrl
  }), children, /*#__PURE__*/React__default.createElement(Actions, null, /*#__PURE__*/React__default.createElement(Icon, {
    opacity: 0.3,
    icon: SvgCall,
    onClick: onVideoClicked
  }), /*#__PURE__*/React__default.createElement(Icon, {
    opacity: 0.3,
    icon: SvgCamera
  }), DropDown));
}

TitleBar.Title = ({
  name,
  title,
  subtitle
}) => /*#__PURE__*/React__default.createElement(Title, null, /*#__PURE__*/React__default.createElement(Paragraph, {
  size: "large"
}, name), /*#__PURE__*/React__default.createElement(Paragraph, {
  type: "secondary"
}, /*#__PURE__*/React__default.createElement(Text, null, title), /*#__PURE__*/React__default.createElement(Text, null, ` ${subtitle}`)));

TitleBar.Title.propTypes = {
  name: propTypes.string,
  title: propTypes.string,
  subtitle: propTypes.string
};
TitleBar.propTypes = {
  children: propTypes.any,
  dropDown: propTypes.any,
  onAvatarClick: propTypes.func,
  status: propTypes.oneOf(['online', 'offline']),
  onVideoClicked: propTypes.func,
  animeProps: propTypes.object,
  style: propTypes.object,
  avatarUrl: propTypes.string
};

export default TitleBar;
