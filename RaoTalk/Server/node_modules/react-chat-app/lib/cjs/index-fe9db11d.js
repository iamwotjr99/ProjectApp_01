'use strict';

var _rollupPluginBabelHelpers = require('./_rollupPluginBabelHelpers-9bd7278f.js');
var React = require('react');
var styledComponents_esm = require('./styled-components.esm-220693da.js');
var theme = require('./theme-37c6f16c.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const shapeVariants = {
  round: styledComponents_esm._e`
      width: ${({
    size
  }) => `${size}px`};
      height: ${({
    size
  }) => `${size}px`};
      border-radius: 50%;
      padding: 10px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    `,
  rect: styledComponents_esm._e`
      padding: 12px 18px;
      border-radius: 6px;
    `
};
const typeVariants = {
  primary: styledComponents_esm._e`
      background-color: ${({
    theme
  }) => theme.primaryColor};
      color: white;
    `,
  success: styledComponents_esm._e`
    background-color: ${({
    theme
  }) => theme.successColor};
    color: white;
  `,
  danger: styledComponents_esm._e`
  background-color: ${({
    theme
  }) => theme.dangerColor};
  color: white;
`
};
const StyledButton = styledComponents_esm.Ye.button`
  border: none;
  outline: none;
  cursor: pointer;
  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);
  ${({
  shape
}) => shapeVariants[shape]}
  ${({
  type
}) => typeVariants[type]}
  ${({
  bgColor
}) => `background-color: ${bgColor}`};
  transform: scale(1);
  transition: 0.4s;
  &:hover {
    transform: scale(1.1);
    box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.12);
  }
`;

function Button({
  children,
  type = 'primary',
  shape = 'rect',
  size = 30,
  color,
  ...rest
}) {
  return /*#__PURE__*/React__default['default'].createElement(styledComponents_esm.Le, {
    theme: theme.theme
  }, /*#__PURE__*/React__default['default'].createElement(StyledButton, _rollupPluginBabelHelpers._extends({}, rest, {
    type: type,
    shape: shape,
    size: size,
    color: color
  }), children));
}

Button.propTypes = {
  // eslint-disable-next-line react/forbid-prop-types
  children: styledComponents_esm.propTypes.any,
  type: styledComponents_esm.propTypes.oneOf(['primary', 'danger', 'success']),
  shape: styledComponents_esm.propTypes.oneOf(['rect', 'round']),
  color: styledComponents_esm.propTypes.string,
  size: styledComponents_esm.propTypes.number
};

exports.Button = Button;
exports.StyledButton = StyledButton;
