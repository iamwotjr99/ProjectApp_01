'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Avatar = require('./Avatar.js');
var Badge = require('./Badge.js');
var Bubble = require('./Bubble.js');
var Button = require('./index-dc2aad31.js');
var _rollupPluginBabelHelpers = require('./_rollupPluginBabelHelpers-9bd7278f.js');
var React = require('react');
var styledComponents_esm = require('./styled-components.esm-92a8efa7.js');
var theme = require('./theme-37c6f16c.js');
var Paragraph = require('./Paragraph.js');
var Icon = require('./index-4c52fc8e.js');
var MessageList = require('./index-c260b296.js');
var Divider = require('./Divider.js');
var Filter = require('./Filter.js');
var Heading = require('./Heading.js');
var Input = require('./Input.js');
var MessageBar = require('./MessageBar.js');
var Navbar = require('./Navbar.js');
var Option = require('./Option.js');
var Popover = require('./Popover.js');
var Select = require('./Select.js');
var Text = require('./Text.js');
var VoiceMessage = require('./VoiceMessage.js');
var Profile = require('./Profile.js');
var DropDown = require('./DropDown.js');
var TitleBar = require('./TitleBar.js');
var FilterList = require('./FilterList.js');
var ChatApp = require('./ChatApp.js');
var Conversation = require('./Conversation.js');
require('./style-4ef8db8a.js');
require('./mixins-4c7023a3.js');
require('./style-0ac2425a.js');
require('./style-94d0e43c.js');
require('./style-b9a5dc7e.js');
require('./index-e429b214.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function Card({
  children,
  background = '#fff',
  avatarUrl,
  avatarStatus,
  title,
  subtitle,
  rightLabel,
  subLabel: SubLabel,
  description,
  count,
  active,
  iconSvg,
  ...rest
}) {
  return /*#__PURE__*/React__default['default'].createElement(styledComponents_esm.Le, {
    theme: theme.theme
  }, /*#__PURE__*/React__default['default'].createElement(MessageList.StyledCard, _rollupPluginBabelHelpers._extends({
    active: active
  }, rest, {
    background: background
  }), /*#__PURE__*/React__default['default'].createElement(Avatar, {
    status: avatarStatus,
    src: avatarUrl
  }), /*#__PURE__*/React__default['default'].createElement(MessageList.Title, null, title), /*#__PURE__*/React__default['default'].createElement(MessageList.SubTitle, null, subtitle), SubLabel && /*#__PURE__*/React__default['default'].createElement(SubLabel, {
    style: {
      'grid-area': 'sublabel'
    }
  }), /*#__PURE__*/React__default['default'].createElement(MessageList.RightLabel, null, rightLabel), /*#__PURE__*/React__default['default'].createElement(MessageList.Description, {
    iconSvg: iconSvg
  }, iconSvg && /*#__PURE__*/React__default['default'].createElement(Icon.Icon, {
    width: 16,
    height: 14,
    icon: iconSvg,
    color: active ? theme.theme.inactiveColorDark : theme.theme.inactiveColor,
    opacity: active ? 0.4 : 1,
    style: {
      justifyContent: 'start'
    }
  }), /*#__PURE__*/React__default['default'].createElement(Paragraph, null, description), /*#__PURE__*/React__default['default'].createElement(MessageList.UnreadBadge, {
    count: count
  }))));
}

Card.propTypes = {
  children: styledComponents_esm.propTypes.any,
  background: styledComponents_esm.propTypes.string,
  avatarUrl: styledComponents_esm.propTypes.string,
  title: styledComponents_esm.propTypes.string,
  subtitle: styledComponents_esm.propTypes.string,
  rightLabel: styledComponents_esm.propTypes.string,
  subLabel: styledComponents_esm.propTypes.element,
  description: styledComponents_esm.propTypes.string,
  count: styledComponents_esm.propTypes.number,
  avatarStatus: styledComponents_esm.propTypes.any,
  active: styledComponents_esm.propTypes.bool,
  iconSvg: styledComponents_esm.propTypes.oneOfType([styledComponents_esm.propTypes.func, styledComponents_esm.propTypes.object])
};

exports.Avatar = Avatar;
exports.Badge = Badge;
exports.Bubble = Bubble;
exports.Button = Button.Button;
exports.Paragraph = Paragraph;
exports.Icon = Icon.Icon;
exports.MessageList = MessageList.MessageList;
exports.Divider = Divider;
exports.Filter = Filter;
exports.Heading = Heading;
exports.Input = Input;
exports.MessageBar = MessageBar;
exports.MenuItem = Navbar.MenuItem;
exports.Navbar = Navbar['default'];
exports.Option = Option;
exports.Popover = Popover;
exports.Select = Select;
exports.Text = Text;
exports.VoiceMessage = VoiceMessage;
exports.Profile = Profile;
exports.DropDown = DropDown;
exports.TitleBar = TitleBar;
exports.FilterList = FilterList;
exports.default = ChatApp;
exports.Conversation = Conversation;
exports.Card = Card;
